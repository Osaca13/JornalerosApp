@page "/Candidato"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication
@using JornalerosApp.Pages.Candidatos
@using JornalerosApp.Shared.Services
@inject AuthenticationStateProvider Provider
@inject IHttpClientFactory Factory;
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager Navigation


<BSContainer IsFluid="true">
    <BSCard Alignment="Alignment.Center">
        <BSCard CardType="CardType.Image" src="/images/campoSembrado.jpg" alt="Card image cap" />
        <BSCard CardType="CardType.Body">
            <BSCard CardType="CardType.Title">Perfil del Candidato</BSCard>
            <BSCard CardType="CardType.Text">Le brindamos una forma sencilla y ágil de inscribirse a ofertas y rellenar su expediente laboral...</BSCard>
            <BSRow Class="justify-content-center" >
                <ul class="nav flex-row">
                    <li class="nav-item px-3">
                        <NavLink class="nav-link btn btn-primary" Match="NavLinkMatch.All" @onclick="@((MouseEventArgs e) =>IraCV(e))">
                            <span class="oi oi-home" aria-hidden="true"></span>
                            Datos Personales
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link btn btn-primary" @onclick="@((MouseEventArgs e) =>IraOfertas(e))">
                            <span class="oi oi-eye" aria-hidden="true"></span>
                            Buscar Ofertas
                        </NavLink>
                     </li>
                </ul>
            </BSRow>
        </BSCard>
    </BSCard>
</BSContainer>

@code {
    [Parameter] public string UserName { get; set; }
    [Parameter] public string Id { get; set; }

    private HttpClient client;

    private void IraCV(MouseEventArgs e)
    {
        string direccion = "/Candidato/CV/" + Id;
        Navigation.NavigateTo(direccion);
    }

    private void IraOfertas(MouseEventArgs e)
    {
        Navigation.NavigateTo("/BuscarOfertas/");
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await Provider.GetAuthenticationStateAsync();
        var user = authState.User;

        if(Id == null)
        {
            Id = UserManager.GetUserId(user);
            UserName = user.Identity.Name;
        }
        await InvokeAsync(() => StateHasChanged());
    }
}
