@page "/Candidato/EditarCV/{Id}"
@using JornalerosApp.Shared.Services
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json;
@inject AuthenticationStateProvider Provider
@inject IHttpClientFactory Factory;
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager Navigation

<h3>Editar Curriculum Vitae</h3>

<EditForm Model="@persona" OnValidSubmit="@CrearDatosUsuario">
    <DataAnnotationsValidator />
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group row mb-1">
        <BSLabel For="CVCorreo" Class="mr-sm-6">Correo Electrónico: @persona.CorreoElectronico</BSLabel>
        @*<BSBasicInput InputType="InputType.Text" Name="Correo" Id="CVCorreo" PlaceHolder="Correo Electrónico" @bind-Value="" />
        <ValidationMessage For="@(() => persona.CorreoElectronico)" />*@
    </div>
    <div class="form-group row mb-1">
       
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVNombre" Class="mr-sm-6">Nombre</BSLabel>
            <BSBasicInput InputType="InputType.Text" Name="Nombre" Id="CVNombre" PlaceHolder="Nombre" @bind-Value="@persona.Nombre" />
            <ValidationMessage For="@(() => persona.Nombre)" />

        </BSFormGroup>
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVApellido" Class="mr-sm-6">Apellido</BSLabel>
            <BSBasicInput InputType="InputType.Text" Name="Apellido" Id="CVApellido" PlaceHolder="Apellido" @bind-Value="@persona.PrimerApellido" />
            <ValidationMessage For="@(() => persona.PrimerApellido)" />

        </BSFormGroup>
        
    </div>
    <div class="form-group row mb-1">
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVDNI" Class="mr-sm-6">DNI/NIE</BSLabel>
            <BSBasicInput InputType="InputType.Text" Name="DNI" Id="CVDNI" PlaceHolder="DNI/NIE" @bind-Value="@persona.Dni" />
            <ValidationMessage For="@(() => persona.Dni)" />

        </BSFormGroup>
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVFechaNacimiento" Class="mr-sm-6">Fecha de nacimiento</BSLabel>
            <BSBasicInput InputType="InputType.Date" Name="FechaNacimiento" Id="CVFechaNacimiento" PlaceHolder="Fecha de Nacimiento" @bind-Value="@persona.FechaNacimiento" />
            <ValidationMessage For="@(() => persona.FechaNacimiento)" />

        </BSFormGroup>
      
    </div>
   
    <div class="form-group row mb-1">
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVSexo" Class="mr-sm-6">Sexo</BSLabel>
            <BSBasicInput Id="CVSexo" InputType="InputType.Select" @bind-Value="@persona.Sexo" >
                <option value="" selected></option>
                <option value="Masculino">Masculino</option>
                <option value="Femenino">Femenino</option>
            </BSBasicInput>
            <ValidationMessage For="@(() => persona.Sexo)" />
        </BSFormGroup>
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVCoche" Class="mr-sm-6">¿Coche propio?</BSLabel>
            <BSBasicInput Id="CVCoche" InputType="InputType.Select" @bind-Value="@persona.CochePropio">
                <option value="" selected></option>
                <option value="Si">Si</option>
                <option value="No">No</option>
            </BSBasicInput>
            <ValidationMessage For="@(() => persona.CochePropio)" />
        </BSFormGroup>

    </div>
    <div class="form-group row mb-1">
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVLocalidad" Class="mr-sm-6">Municipio Residencia</BSLabel>
            <BSBasicInput InputType="InputType.Text" Name="Localidad" Id="CVLocalidad" PlaceHolder="Localidad" @bind-Value="@persona.LugarResidencia" />
            <ValidationMessage For="@(() => persona.LugarResidencia)" />

        </BSFormGroup>
        <BSFormGroup Class="mb-12 mr-sm-12 mb-sm-0 col">
            <BSLabel For="CVProvincia" Class="mr-sm-6">Provincia</BSLabel>
            <BSBasicInput InputType="InputType.Text" Name="Provincia" Id="CVProvincia" PlaceHolder="Provincia" @bind-Value="@persona.ProvinciaResidencia" />
            <ValidationMessage For="@(() => persona.ProvinciaResidencia)" />
        </BSFormGroup>
        
    </div>   
    
    <div class="form-group text-center mb-0">
        <button type="submit" ref="createButton" id="BtnRegister" class="btn btn-primary">Guardar</button>

    </div>


</EditForm>

@code {
    [Parameter] public string Id { get; set; }
    private Persona persona { get; set; } = new Persona();
    private HttpClient client;
    [Parameter] public System.Linq.Expressions.Expression<Func<string>> ValueExpression { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        var authState = await Provider.GetAuthenticationStateAsync();
        var user = authState.User;
        client = Factory.CreateClient("clientFirst");
        try
        {
            persona = await client.GetFromJsonAsync<Persona>("Personas/" + Id);
            if (persona.CorreoElectronico == null)
            {
                persona = new Persona
                {
                    IdPersona = Id,
                    Nombre = string.Empty,
                    PrimerApellido = string.Empty,
                    Sexo = string.Empty,
                    CorreoElectronico = authState.User.Identity.Name
                };

                var respsta = await client.PostAsJsonAsync<Persona>("Personas/" + Id, persona);
            }

        }catch(Exception exc)
        {
            System.Diagnostics.Debug.WriteLine(exc);
        }

    }

    private async void CrearDatosUsuario()
    {
        StateHasChanged();
        try
        {
            var estado = await client.PutAsJsonAsync<Persona>("Personas/" + Id, persona);
            
        }catch(Exception exc)
        {
            System.Diagnostics.Debug.WriteLine(exc.Message);

        }


        Navigation.NavigateTo("/");
    }
}
