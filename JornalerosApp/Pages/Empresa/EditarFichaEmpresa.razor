@page "/Empresa/EditarFichaEmpresa/{Id}"
@using JornalerosApp.Shared.Services
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json;
@inject AuthenticationStateProvider Provider
@*@inject ICustomHttpClient CustomHttpClient;*@
@inject IHttpClientFactory Factory;
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager Navigation

<h3>Editar Ficha de Empresa</h3>

<EditForm Model="@persona" OnValidSubmit="@CrearDatosUsuario">
    <DataAnnotationsValidator />
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="CorreoElectronico">Email</label>

        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@persona.CorreoElectronico" />
            <ValidationMessage For="@(() => persona.CorreoElectronico)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="Nombre">Nombre</label>
        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@persona.Nombre" />
            <ValidationMessage For="@(() => persona.Nombre)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="PrimerApellido">Primer Apellido</label>

        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@persona.PrimerApellido" />
            <ValidationMessage For="@(() => persona.PrimerApellido)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="DNI">DNI/NIE</label>
        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@persona.Dni" />
            <ValidationMessage For="@(() => persona.Dni)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="FechaNacimiento">Fecha de Nacimiento</label>

        <div class="col-sm-9">
            <InputDate Class="form-control" @bind-Value="@persona.FechaNacimiento" />
            <ValidationMessage For="@(() => persona.FechaNacimiento)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="Sexo">Sexo</label>

        <div class="col-sm-9">
            <InputSelect Class="form-control" @bind-Value="@persona.Sexo">
                <option value="" selected></option>
                <option value="Masculino">Masculino</option>
                <option value="Femenino">Femenino</option>
            </InputSelect>
            <ValidationMessage For="@(() => persona.Sexo)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="LugarResidencia">Localidad de Residencia</label>

        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@persona.LugarResidencia" />
            <ValidationMessage For="@(() => persona.LugarResidencia)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="ProvinciaResidencia">Provincia</label>

        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@persona.ProvinciaResidencia" />
            <ValidationMessage For="@(() => persona.ProvinciaResidencia)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="CochePropio">¿Coche Propio?</label>

        <div class="col-sm-9">
            <InputSelect Class="form-control" @bind-Value="@persona.CochePropio">
                <option value="" selected></option>
                <option value="No">No</option>
                <option value="Si">Si</option>
            </InputSelect>
            <ValidationMessage For="@(() => persona.CochePropio)" />
        </div>
    </div>
    <div class="form-group text-center mb-0">
        <button type="submit" ref="createButton" id="BtnRegister" class="btn btn-primary">Guardar</button>

    </div>


</EditForm>

@code {
    [Parameter] public string Id { get; set; }
    private Persona persona { get; set; } = new Persona();
    private HttpClient client;
    [Parameter] public System.Linq.Expressions.Expression<Func<string>> ValueExpression { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        var authState = await Provider.GetAuthenticationStateAsync();
        var user = authState.User;
        client = Factory.CreateClient("clientFirst");
        try
        {
            persona = await client.GetFromJsonAsync<Persona>("Personas/" + Id);
            if (persona.CorreoElectronico == null)
            {
                persona = new Persona
                {
                    IdPersona = Id,
                    Nombre = string.Empty,
                    PrimerApellido = string.Empty,
                    Sexo = string.Empty,
                    CorreoElectronico = authState.User.Identity.Name
                };

                var respsta = await client.PostAsJsonAsync<Persona>("Personas/" + Id, persona);
            }

        }catch(Exception exc)
        {
            System.Diagnostics.Debug.WriteLine(exc);
        }

    }

    private async void CrearDatosUsuario()
    {
        StateHasChanged();
        try
        {
            var estado = await client.PutAsJsonAsync<Persona>("Personas/" + Id, persona);
            
        }catch(Exception exc)
        {
            System.Diagnostics.Debug.WriteLine(exc.Message);

        }


        Navigation.NavigateTo("/");
    }
}
