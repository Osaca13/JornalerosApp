@page "/Empresa/EditarFichaEmpresa/{Id}"
@using JornalerosApp.Shared
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json;
@inject AuthenticationStateProvider Provider
@*@inject ICustomHttpClient CustomHttpClient;*@
@inject IHttpClientFactory Factory;
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager Navigation

<h3>Editar Ficha de Empresa</h3>

<EditForm Model="@empresa" OnValidSubmit="@CrearDatosEmpresa">
    <DataAnnotationsValidator />
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="CorreoElectronico">Correo</label>

        <div class="col-sm-9">
            @*<InputText Class="form-control" @bind-Value="@empresa.CorreoElectronico" />
            <ValidationMessage For="@(() => empresa.CorreoElectronico)" />*@
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="Nombre">Nombre</label>
        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@empresa.Nombre" />
            <ValidationMessage For="@(() => empresa.Nombre)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="PrimerApellido">Primer Apellido</label>

        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@empresa.RazonSocial" />
            <ValidationMessage For="@(() => empresa.RazonSocial)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="DNI">DNI/NIE</label>
        <div class="col-sm-9">
            <InputText Class="form-control" @bind-Value="@empresa.Provincia" />
            <ValidationMessage For="@(() => empresa.Provincia)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="Telefono">Telefono</label>

        <div class="col-sm-9">
            <InputDate Class="form-control" @bind-Value="@empresa.Telefono" />
            <ValidationMessage For="@(() => empresa.Telefono)" />
        </div>
    </div>
    
    
    <div class="form-group text-center mb-0">
        <button type="submit" ref="createButton" id="BtnRegister" class="btn btn-primary">Guardar</button>

    </div>


</EditForm>

@code {
    [Parameter] public string Id { get; set; }
    private Empresa empresa { get; set; } = new Empresa();
    private HttpClient client;
    [Parameter] public System.Linq.Expressions.Expression<Func<string>> ValueExpression { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        var authState = await Provider.GetAuthenticationStateAsync();
        var user = authState.User;
        client = Factory.CreateClient("clientFirst");
        try
        {
            empresa = await client.GetFromJsonAsync<Empresa>("Empresa/" + Id);
            if (empresa == null)
            {
                empresa = new Empresa
                {
                    IdEmpresa = Id,
                    Nombre = string.Empty,
                    RazonSocial = string.Empty,
                    Provincia = string.Empty,
                    Telefono = default
                };

                var respsta = await client.PostAsJsonAsync<Empresa>("Empresas/" + Id, empresa);
            }

        }catch(Exception exc)
        {
            System.Diagnostics.Debug.WriteLine(exc);
        }

    }

    private async void CrearDatosEmpresa()
    {
        StateHasChanged();
        try
        {
            var estado = await client.PutAsJsonAsync<Empresa>("Empresas/" + Id, empresa);

        }catch(Exception exc)
        {
            System.Diagnostics.Debug.WriteLine(exc.Message);

        }


        Navigation.NavigateTo("/");
    }
}
